{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\DecafMap\\\\front\\\\pages\\\\_app.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport { Provider } from 'react-redux';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Theme from \"../Styles/Theme\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport { Container } from 'next/app';\nimport PropTypes from 'prop-types';\nimport withRedex from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport reducer from '../reducers';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(ThemeProvider, {\n    theme: Theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(React.Fragment, null, __jsx(GlobalStyles, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"DecafMap\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/4.0.4/antd.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  })), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })))));\n}; // const configureStore = (initialState, options)=>{\n//     const sagaMiddleware = createSagaMiddleware();\n//     const middlewares = [sagaMiddleware, (store)=>(next)=>(action)=> {\n//       console.log(action);\n//       next(action);\n//     }];\n//     const enhancer = process.env.NODE_ENV === 'production'\n//       ? compose(applyMiddleware(...middlewares))\n//       : compose(\n//         applyMiddleware(...middlewares),\n//         !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n//       );\n//     const store = createStore(reducer,initialState,enhancer);\n//     //withReduxSaga할 때 필요\n//     store.sagaTask = sagaMiddleware.run(rootSaga);\n//     return store;\n// }\n\n\nexport default MyApp; // export default withRedex(configureStore)(withReduxSaga(MyApp));","map":{"version":3,"sources":["C:/Users/admin/Desktop/DecafMap/front/pages/_app.js"],"names":["React","Head","AppLayout","Provider","styled","ThemeProvider","Theme","GlobalStyles","Container","PropTypes","withRedex","withReduxSaga","reducer","createStore","compose","applyMiddleware","createSagaMiddleware","MyApp","Component","store"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,OAAOC,SAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwB;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAElC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,4BACA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,4DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ,CADJ,CADJ;AAgBH,CAlBD,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeW,KAAf,C,CAEA","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport {Provider} from 'react-redux'\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport Theme from \"../Styles/Theme\";\r\nimport GlobalStyles from \"../Styles/GlobalStyles\";\r\nimport {Container} from 'next/app';\r\nimport PropTypes  from 'prop-types';\r\nimport withRedex from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport reducer from '../reducers';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nconst MyApp = ({Component, store}) => {\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={Theme}>\r\n                <>\r\n                <GlobalStyles />\r\n                    <Head>\r\n                        <title>DecafMap</title>\r\n                        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/4.0.4/antd.css\" />\r\n                    </Head>\r\n                    <AppLayout>\r\n                        <Component />\r\n                    </AppLayout>\r\n                </>\r\n            </ThemeProvider>\r\n        </Provider>\r\n    )\r\n};\r\n\r\n// const configureStore = (initialState, options)=>{\r\n//     const sagaMiddleware = createSagaMiddleware();\r\n//     const middlewares = [sagaMiddleware, (store)=>(next)=>(action)=> {\r\n//       console.log(action);\r\n//       next(action);\r\n//     }];\r\n//     const enhancer = process.env.NODE_ENV === 'production'\r\n//       ? compose(applyMiddleware(...middlewares))\r\n//       : compose(\r\n//         applyMiddleware(...middlewares),\r\n//         !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n//       );\r\n//     const store = createStore(reducer,initialState,enhancer);\r\n//     //withReduxSaga할 때 필요\r\n//     store.sagaTask = sagaMiddleware.run(rootSaga);\r\n//     return store;\r\n// }\r\n\r\n\r\nexport default MyApp;\r\n\r\n// export default withRedex(configureStore)(withReduxSaga(MyApp));"]},"metadata":{},"sourceType":"module"}