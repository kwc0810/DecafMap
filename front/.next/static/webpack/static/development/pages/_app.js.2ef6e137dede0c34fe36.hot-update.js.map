{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.2ef6e137dede0c34fe36.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport {Provider} from 'react-redux'\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport Theme from \"../Styles/Theme\";\r\nimport GlobalStyles from \"../Styles/GlobalStyles\";\r\nimport {Container} from 'next/app';\r\nimport PropTypes  from 'prop-types';\r\nimport withRedex from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nconst MyApp = ({Component, store}) => {\r\n\r\n    return (\r\n        \r\n            <ThemeProvider theme={Theme}>\r\n                <>\r\n                <GlobalStyles />\r\n                    <Head>\r\n                        <title>DecafMap</title>\r\n                        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/4.0.4/antd.css\" />\r\n                    </Head>\r\n                    <AppLayout>\r\n                        <Component />\r\n                    </AppLayout>\r\n                </>\r\n            </ThemeProvider>\r\n       \r\n    )\r\n};\r\n\r\n// const configureStore = (initialState, options)=>{\r\n//     const sagaMiddleware = createSagaMiddleware();\r\n//     const middlewares = [sagaMiddleware, (store)=>(next)=>(action)=> {\r\n//       console.log(action);\r\n//       next(action);\r\n//     }];\r\n//     const enhancer = process.env.NODE_ENV === 'production'\r\n//       ? compose(applyMiddleware(...middlewares))\r\n//       : compose(\r\n//         applyMiddleware(...middlewares),\r\n//         !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n//       );\r\n//     const store = createStore(reducer,initialState,enhancer);\r\n//     //withReduxSaga할 때 필요\r\n//     store.sagaTask = sagaMiddleware.run(rootSaga);\r\n//     return store;\r\n// }\r\n\r\n\r\nexport default MyApp;\r\n\r\n// export default withRedex(configureStore)(withReduxSaga(MyApp));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}